<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bdqn.ban.dao.BookMapper" >
  <resultMap id="BaseResultMap" type="com.bdqn.ban.entity.Book" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="publish" property="publish" jdbcType="VARCHAR" />
    <result column="publishdate" property="publishdate" jdbcType="DATE" />
    <result column="page" property="page" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="INTEGER" />
  </resultMap>
  
  
 <!-- 用来显示全部的sql语句 -->
  <select id="selectAll" resultMap="BaseResultMap">	
   select * from book
  </select>
  
  <!-- 删除语句  -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  
  <!-- 修改全部Sql  parameterType参数类型，因为不是一个参数没所以对应实体类-->
   <!--<update id="bookUpdate" parameterType="com.bdqn.ban.entity.Book">-->
	 <update id="bookUpdate" parameterType="java.util.Map">
    update book
    <set>
      <if test="name != null">
        Name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        Author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="publish != null">
        publish = #{publish,jdbcType=VARCHAR},
      </if>
      <if test="publishdate != null">
        publishdate = #{publishdate,jdbcType=DATE},
      </if>
      <if test="page != null">
        Page = #{page,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        Price = #{price,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
    <!-- 用来根据条件查询的sql语句 -->
   <select id="selectBykeyword" resultMap="BaseResultMap">
    select * from book where name like CONCAT("%",#{str,jdbcType=VARCHAR},"%")
   </select>
  
  
    <!-- 根据什么查找 -->
  	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    	*
    from book
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <insert id="insert" parameterType="java.util.Map" >
    insert into book (id, name, author, 
      publish, publishdate, page, 
      price)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{publish,jdbcType=VARCHAR}, #{publishdate,jdbcType=DATE}, #{page,jdbcType=INTEGER}, 
      #{price,jdbcType=INTEGER})
  </insert>
 	
 	 
 	<select id="selectByList" resultMap="BaseResultMap">
   		 select
			*
	     from book
    </select> 
 	
  </mapper>